%Event triggered averaging: This script references a data structure (current structure being referenced is ephys data from HFWR behvior, struture is stored in a mat file generated by different scripts) to create even triggered averages of data. a particular trigger signal i.e.the first moment the optogenetic light comes on to segment data i.e. 30ms after ligth comes on 
    %% segment: a particular trigger signal i.e.the first moment the optogenetic light comes on defines the start and a fixed time is taken after that. 
    %% filter : particularly for EMG signals , a bandpass filter, rectification and low pass smoothing is applied
    %% zscore : filtered EMG signals are normalised to the mean
    %% average : trials are averaged at the same time point 
    %% latency : identifies latency to EMG effects, by identifying the first peak in the data set within a specified window ,
    %% plot: plots all trials and the average data
%%Corrections:filter/ zscore  before the segmentation, do it in the for loop 

%%Segment 
%segments data after the light pulse comes on
%lightOnTrig_ts_fixed is the event data index where the light comes on, the light is pulsed at 20hzi.e once ever 30ms at a sampling rate 30000 that becomes 900 samples, lightOnTrig_ts_fixed is with reference to start of hfwr recording session, use start_ts to reference the light on trigger to trial start  
dataPostOpto_first_filtered=[];%expecting an n X m matrix where each row is an opto ON trial
dataPostOpto_second_filtered=[];
dataPostOpto_third_filtered=[];
dataPostOpto_first_filtered_zscore=[];%expecting an n X m matrix where each row is an opto ON trial
dataPostOpto_second_filtered_zscore=[];
dataPostOpto_third_filtered_zscore=[];
optoOnfirstPulseFromStart=[];
optoOnsecondPulseFromStart=[];
optoOnthirdPulseFromStart=[];
%filters EMG data, butterworth filters from Akira
[b,a] = butter(4,[200,1000]/(ephysSamplingRate/2),'bandpass');
[b2,a2] = butter(4,500/(ephysSamplingRate/2),'low');

for i=1:length(trialList_tone_on)
    trial=trialList_tone_on(i);
        if  strcmpi(trial.lightTrig_fixed,'ON')
            %optoOntrigger timepoint
            opto_firstPulse=trial.lightOnTrig_ts_fixed(1);
            opto_secondPulse=opto_firstPulse+((ephysSamplingRate*50)/1000)-1;%20hz laser stim
            opto_thirdPulse=opto_secondPulse+((ephysSamplingRate*50)/1000)-1;%20hz laser stim

            optoOn_firstPulse_idx=opto_firstPulse-trial.start_ts;
            optoOn_secondPulse_idx=opto_secondPulse-trial.start_ts;
            opto_thirdPulse_idx=opto_thirdPulse-trial.start_ts;
            
            optoOnfirstPulse_FromStart=optoOn_firstPulse_idx*1000/ephysSamplingRate;
            optoOnsecondPulse_FromStart=optoOn_firstPulse_idx*1000/ephysSamplingRate;
            optoOnthirdPulse_FromStart=optoOn_firstPulse_idx*1000/ephysSamplingRate;

            %%filter
            data_bp_filtered=filtfilt(b,a,trial.EMG_trap_fixed);
            data_rectified=abs(data_bp_filtered);
            data_low_filtered=filtfilt(b2,a2,data_rectified);

            %%zscore
            data_low_filtered_zscore=zscore(data_low_filtered);

            %%segment filtered data
            data_firstPulse_filtered=data_low_filtered(optoOn_firstPulse_idx:optoOn_firstPulse_idx+((ephysSamplingRate*50)/1000)-1);
            data_secondPulse_filtered=data_low_filtered(optoOn_secondPulse_idx:optoOn_secondPulse_idx+((ephysSamplingRate*50)/1000)-1);  
            data_thirdPulse_filtered=data_low_filtered(opto_thirdPulse_idx:opto_thirdPulse_idx+((ephysSamplingRate*50)/1000)-1);

            dataPostOpto_first_filtered=[dataPostOpto_first_filtered,data_firstPulse_filtered];
            dataPostOpto_second_filtered=[dataPostOpto_second_filtered,data_secondPulse_filtered];
            dataPostOpto_third_filtered=[dataPostOpto_third_filtered,data_thirdPulse_filtered];

            %%segment filtered zscore data
            data_firstPulse_filtered_zscore=data_low_filtered_zscore(optoOn_firstPulse_idx:optoOn_firstPulse_idx+((ephysSamplingRate*50)/1000)-1);
            data_secondPulse_filtered_zscore=data_low_filtered_zscore(optoOn_secondPulse_idx:optoOn_secondPulse_idx+((ephysSamplingRate*50)/1000)-1);  
            data_thirdPulse_filtered_zscore=data_low_filtered_zscore(opto_thirdPulse_idx:opto_thirdPulse_idx+((ephysSamplingRate*50)/1000)-1);

            dataPostOpto_first_filtered_zscore=[dataPostOpto_first_filtered_zscore,data_firstPulse_filtered_zscore];
            dataPostOpto_second_filtered_zscore=[dataPostOpto_second_filtered_zscore,data_secondPulse_filtered_zscore];
            dataPostOpto_third_filtered_zscore=[dataPostOpto_third_filtered_zscore,data_thirdPulse_filtered_zscore];

            optoOnfirstPulseFromStart=[optoOnfirstPulseFromStart;optoOnfirstPulse_FromStart];
            optoOnsecondPulseFromStart=[optoOnsecondPulseFromStart;optoOnsecondPulse_FromStart];
            optoOnthirdPulseFromStart=[optoOnthirdPulseFromStart;optoOnthirdPulse_FromStart];

        end   
end

%%Transpose,above code generates 900X(optoONtrialNumber) matrix, each trial is a column, transpose such that each row is a trial 
dataPostOpto_first_filtered=dataPostOpto_first_filtered';
dataPostOpto_second_filtered=dataPostOpto_second_filtered';
dataPostOpto_third_filtered=dataPostOpto_third_filtered';

dataPostOpto_first_filtered_zscore=dataPostOpto_first_filtered_zscore';
dataPostOpto_second_filtered_zscore=dataPostOpto_second_filtered_zscore';
dataPostOpto_third_filtered_zscore=dataPostOpto_third_filtered_zscore';


averageOptolatency=mean(optoOnfirstPulseFromStart,1);

%%Average 
%uses getAverageDataArray to generate calculate trial averages and standard deviation
[avg_dataPostOpto_first_filtered, std_dataPostOpto_first_filtered] = getAverageDataArray(dataPostOpto_first_filtered);
[avg_dataPostOpto_first_filtered_zscore, std_dataPostOpto_first_filtered_zscore] = getAverageDataArray(dataPostOpto_first_filtered_zscore);
[avg_dataPostOpto_second_filtered, std_dataPostOpto_second_filtered] = getAverageDataArray(dataPostOpto_second_filtered);
[avg_dataPostOpto_second_filtered_zscore, std_dataPostOpto_second_filtered_zscore] = getAverageDataArray(dataPostOpto_second_filtered_zscore);
[avg_dataPostOpto_third_filtered, std_dataPostOpto_third_filtered] = getAverageDataArray(dataPostOpto_third_filtered);
[avg_dataPostOpto_third_filtered_zscore, std_dataPostOpto_third_filtered_zscore] = getAverageDataArray(dataPostOpto_third_filtered_zscore);



%%latency, identifies the latency of the first peak after the opto comes ON per trial, find peaks, within a window of 2.5ms to 15.5 ms, identify the first peak , calculate time from start
latency_trial=[];
for i=1:size(dataPostOpto_third_filtered_zscore,1)
    trial=dataPostOpto_third_filtered_zscore(i, :);
    [pks,loc]=findpeaks(trial,'MinPeakHeight', 1.3);
    if ~isempty(loc) 
        loc_after75samples =loc(loc>75);% first peak after 2.5ms
        if ~isempty(loc_after75samples)
            latencyOfFirstpeak=loc_after75samples(1)*1000/ephysSamplingRate;
        else
            latencyOfFirstpeak=nan;
        end
    else
        latencyOfFirstpeak=nan;
    end   
    latency_trial=[latency_trial;latencyOfFirstpeak];
end 
avglatency=mean(latency_trial,'omitnan');%gets average latency
stdlatency=std(latency_trial,'omitnan');%gets standard deviation


%%plot
%plots the zscore over ms of individual trials and the average trial, use %bicep: 'Color',[0 0.4470 0.7410],tricep:'Color', [0.6350 0.0780 0.1840], %trap: 'Color' "#82E0AA", ecu:'Color' "#D2B4DE", mdelt:"#E59866", Adelt:"#34495E"  for color identification
%optobar and latency values is drawn in 
figure;
for i=1:size(dataPostOpto_third_filtered_zscore,1)
    trial=dataPostOpto_third_filtered_zscore(i, :);
    plot((1:length(trial))*1000/ephysSamplingRate,trial,'k','lineWidth',1)
    hold on 
end

hold on 
plot((1:length(avg_dataPostOpto_third_filtered_zscore))*1000/ephysSamplingRate,avg_dataPostOpto_third_filtered_zscore,'Color',"#82E0AA",'lineWidth',4 );
figure;
for i=1:size(dataPostOpto_third_filtered,1)
    trial=dataPostOpto_third_filtered(i, :);
    plot((1:length(trial))*1000/ephysSamplingRate,trial,'k','lineWidth',1)
    hold on 
end

hold on 
plot((1:length(avg_dataPostOpto_third_filtered))*1000/ephysSamplingRate,avg_dataPostOpto_third_filtered,'Color',"#34495E",'lineWidth',4 );


